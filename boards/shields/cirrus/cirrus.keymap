/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        display-name = "Default Layer";



                        bindings = <
   &none       &kp K_POWER  &kp ESC      &kp 1    &kp 2 &kp 3 &kp 4    &kp 5                        &kp 6      &kp 7       &kp 8     &kp 9     &kp 0      &kp BSPC    &kp DEL     &none            
   &none       &kp GRAVE    &kp TAB      &kp Q    &kp W &kp E &kp R    &kp T                        &kp Y      &kp U       &kp I     &kp O     &kp P      &kp LBKT    &kp RBKT    &none 
   &none       &kp GLOBE    &kp CAPS     &kp A    &kp S &kp D &kp F    &kp G                        &kp H      &kp J       &kp K     &kp L     &kp SEMI   &kp SQT     &kp ENTER   &none 
   &kp LSHIFT  &none        &none        &kp Z    &kp X &kp C &kp V    &kp B                        &kp N      &kp M       &kp COMMA &kp DOT   &kp UP     &none       &none       &kp FSLH 
   &none       &none        &kp LCTRL    &kp LALT &mo 2 &mo1  &kp RCMD &kp SPACE                    &kp SPACE  &kp LCMD    &mo1      &kp LEFT  &kp DOWN   &kp RIGHT   &none       &none
   

                        >;
                };
                lower_layer {
                        display-name = "Lower Layer";
//COMMAND LAYER

                        bindings = <
   &none       &kp C_PREV       &kp C_PLAY_PAUSE       &kp C_NEXT       &none       &none       &kp C_BRI_DN       &kp C_BRI_UP                   &none       &none       &none       &none       &kp C_MUTE      &kp C_VOL_DN      &kp C_VOL_UP       &none
   &none       &kp BT_SEL 0     &none       &none       &none       &none       &none       &none                   &none       &none       &none       &none       &none       &none       &none       &none
   &none       &kp BT_SEL 1     &none       &none       &none       &kp LPAR     &kp RPAR     &none                   &none       &kp LBKT     &kp RBKT      &none       &none       &none       &none       &none
   &none       &none            &none       &none       &none       &none       &none       &none                   &none       &none       &none       &none       &none       &none       &none       &none
   &none       &none            &none       &none       &none       &none       &none       &none                   &none       &none       &none       &none       &none       &none       &none       &none
                        >;
                };
//FUNCTION LAYER
                raise_layer {
                        display-name = "Raise Layer";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans       &trans             &kp F1      &kp F2       &kp F3      &kp F4      &kp F5      &kp F6                  &kp F7      &kp F8      &kp F9      &kp F10      &kp F11      &kp F12      &trans       &trans
   &trans       &trans             &trans       &trans       &trans       &trans       &trans       &trans                   &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans
   &trans       &trans             &trans       &trans       &trans       &trans       &trans       &trans                   &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans
   &trans       &trans             &trans       &trans       &trans       &trans       &trans       &trans                   &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans
   &trans       &trans             &trans       &trans       &trans       &trans       &trans       &trans                   &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans
                        >;
                };
        };
};
